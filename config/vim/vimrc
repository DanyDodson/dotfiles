set viminfo+=n~/.vim/viminfo

source ~/.vim/plug.vim

call plug#begin(vim_plug_plugins_dir)
  " Light-weight status line
  Plug 'vim-airline/vim-airline'
  " A tree explorer plugin for vim
  Plug 'preservim/nerdtree'
  " Highlight, navigate, and operate on sets of matching text
  Plug 'andymass/vim-matchup'
  " Displays and browse tags in a file
  Plug 'preservim/tagbar'
  " Fuzzy-file finder in vim
  Plug 'junegunn/fzf'
  " Smoothe scrolling
  Plug 'psliwka/vim-smoothie'
  " File icons for most languages
  Plug 'ryanoasis/vim-devicons'
  " Easy comments in most languages
  Plug 'preservim/nerdcommenter'
  " Check syntax in real-time
  Plug 'dense-analysis/ale'
  " Surround selected text with brackets, quotes, tags etc
  Plug 'tpope/vim-surround'
  " Better incremenal searching
  Plug 'haya14busa/incsearch.vim'
  " Multi-cursor support
  Plug 'mg979/vim-visual-multi'
  " Easily generate number/ letter sequences
  Plug 'triglav/vim-visual-increment'
  " Wraper for running tests
  Plug 'janko/vim-test'
  " Plugin for recording coding metrics
  Plug 'wakatime/vim-wakatime'
call plug#end()

"---------------------
" Basic editing config
"---------------------

let mapleader=" "

set term=xterm-256color
filetype plugin indent on
syntax on
set termguicolors

set shortmess+=I " disable startup message
set nu " number lines
set rnu " relative line numbering
set incsearch " incremental search (as string is being typed)
set hls " highlight search
set listchars=tab:>>,nbsp:~ " set list to see tabs and non-breakable spaces
set lbr " line break
set scrolloff=5 " show lines above and below cursor (when possible)
set noshowmode " hide mode
set laststatus=2
set backspace=indent,eol,start " allow backspacing over everything
set timeout timeoutlen=1000 ttimeoutlen=100 " fix slow O inserts
set lazyredraw " skip redrawing screen in some cases
set autochdir " automatically set current directory to directory of last opened file
set hidden " allow auto-hiding of edited buffers
set history=8192 " more history
set nojoinspaces " suppress inserting two spaces between sentences

set expandtab
set tabstop=2
set shiftwidth=2
set softtabstop=2

set ignorecase
set smartcase

set wildmode=longest,list
set wildmenu
set mouse+=a
if &term =~ '^screen'
    set ttymouse=xterm2
endif
set nofoldenable

"---------------------
" Plugin configuration
"---------------------

let g:airline#extensions#tabline#enabled = 1

" nerdtree
nnoremap <Leader>e :NERDTreeToggle<CR>

"  fzf
nnoremap <leader><leader> :FZF<CR>

"  tagbar
nnoremap <F8> :TagbarToggle<CR>