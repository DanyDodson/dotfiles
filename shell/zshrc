#!/usr/bin/env zsh

DEFAULT_USER=$(whoami)

# consistent colouring
export CLICOLOR=1

# p10k instant prompt
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# run p10k configure or edit p10k.zsh
[[ ! -f ${HOME}/.cache/p10k.zsh ]] || source ${HOME}/.cache/p10k.zsh

# omz theme
ZSH_THEME="powerlevel10k/powerlevel10k"

plugins=(
  git
  brew
  1password-op
  zsh-autosuggestions
  zsh-syntax-highlighting
)

# source oh-my-zsh.
source $ZSH/oh-my-zsh.sh

# zsh files
source ${DOTFILES}/zsh/functions.zsh
source ${DOTFILES}/zsh/aliases.zsh
source ${DOTFILES}/zsh/settings.zsh

# start ssh-agent
eval "$(ssh-agent -s)" >/dev/null 2>&1

# rust
[[ ! -f $HOME/.cargo/env ]] || . $HOME/.cargo/env

# pyenv
if [[ -d "$PYENV_ROOT" ]] && \
  command -v pyenv >/dev/null 2>&1 && \
  command -v pyenv-virtualenv-init >/dev/null; then
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
fi

# fzf
if [ $(command -v fzf) ]; then
  source $DOTFILES/config/fzf/fzf.zsh
fi

# iterm2 integration
[[ -f "${DOTFILES}/config/iterm/iterm.zsh" ]] && . "${DOTFILES}/config/iterm/iterm.zsh"

# 
autoload -Uz compinit
if [ $(date +'%j') != $(stat -f '%Sm' -t '%j' ~/.zcompdump) ]; then
  compinit
else
  compinit -C
fi

