#!/usr/bin/env zsh

# powerlevel10k instant prompt
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# consistent colouring
export CLICOLOR=1

# To customize prompt, run `p10k configure` or edit p10k.zsh.
[[ ! -f ${DOTFILES}/shell/zsh/p10k.zsh ]] || source ${DOTFILES}/shell/zsh/p10k.zsh

# load oh-my-zsh
ZSH_THEME="powerlevel10k/powerlevel10k"

plugins=(
  git
  brew
  1password-op
  zsh-autosuggestions
  zsh-syntax-highlighting
)

# source oh-my-zsh.
source $ZSH/oh-my-zsh.sh

# zsh files
source ${DOTFILES}/shell/zsh/functions.zsh
source ${DOTFILES}/shell/zsh/aliases.zsh
source ${DOTFILES}/shell/zsh/colors.zsh
source ${DOTFILES}/shell/zsh/completion.zsh

# start ssh-agent
eval "$(ssh-agent -s)" >/dev/null 2>&1

# rust
[[ ! -f $HOME/.cargo/env ]] || . $HOME/.cargo/env

# pyenv
if [[ -d "$PYENV_ROOT" ]] && \
  command -v pyenv >/dev/null 2>&1 && \
  command -v pyenv-virtualenv-init >/dev/null; then
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
fi

# fzf
if [ $(command -v fzf) ]; then
    source $DOTFILES/config/fzf/fzf.zsh
fi

# iterm2 integration
test -e  "${DOTFILES}/shell/zsh/iterm.zsh" && source  "${DOTFILES}/shell/zsh/iterm.zsh"

# 
autoload -Uz compinit
if [ $(date +'%j') != $(stat -f '%Sm' -t '%j' ~/.zcompdump) ]; then
  compinit
else
  compinit -C
fi

# after all, set the PATH for macOS
[[ -x /bin/launchctl ]] && /bin/launchctl setenv PATH $PATH

